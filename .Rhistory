# bar chart output
rfm_bar_chart(rfm_result)
# histogram output
rfm_histograms(rfm_result)
rfm_order_dist(rfm_result)
# recency vs freq scatterplot
rfm_rf_plot(rfm_result)
## Build segment descriptors - tentative
test_r = rfm_result$rfm$recency_score
test_f = rfm_result$rfm$frequency_score
test_m = rfm_result$rfm$monetary_score
min1 = min(test_r); max1 = max(test_r); lowmed1 = floor(max1/2)
min1; max1; lowmed1
rfm_segments = case_when(
rfm_score == paste0(max1, max1, max1) %>% as.numeric() ~ "best.customers",
rfm_score == paste0(min1, min1, max1) %>% as.numeric() ~ "lost",
rfm_score < paste0(min1, min1, lowmed1) %>% as.numeric() ~ "lost n cheap",
test_f == max1 ~ "loyals",
test_m == max1 ~ "big spenders"
)
# replace NA with 'Others'
a0 = (is.na(rfm_segments));   rfm_segments[a0] = "Others"
rfm_segments[1:40]
# Calc Segment size
rfm_segments = rfm_segments %>%
data_frame() %>% rename(segment = ".") %>% bind_cols(rfm_data_customer)
rfm_segments %>%
count(segment) %>%
arrange(desc(n)) %>%
rename(Segment = segment, Count = n)
## --- Segment Analysis ---
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment) %>%
select(segment, recency_days) %>%
summarize(median(recency_days)) %>%
rename(segment = segment, avg_recency = `median(recency_days)`) %>%
arrange(avg_recency)
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment)
View(data)
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment) %>%
select(segment, recency_days)
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment) %>%
select(segment, recency_days)
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment) %>%
select(segment)
data <-
rfm_segments %>%
data_frame() %>%
group_by(segment)
data <-
rfm_segments %>%
#data_frame() %>%
group_by(segment) %>%
select(segment, recency_days)
## Resolve dependecies
if (!require(shiny)){install.packages("shiny")}
if (!require(RColorBrewer)){install.packages("RColorBrewer")}
if (!require(ggplot2)){install.packages("ggplot2")}
if (!require(dplyr)){install.packages("dplyr")}
if (!require(rfm)) {install.packages("rfm")}
if (!require(lubridate)) {install.packages("lubridate")}
library(lubridate)
library(rfm)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment) %>%
select(segment, recency_days)
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment) %>%
dplyr::select(segment, recency_days)
rfm_segments <-read.csv("Segment1.csv")
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment)
View(rfm_segments)
data <-
rfm_segments %>% # data_frame() %>%
group_by(names(rfm_segments)[3])
data <-
rfm_segments %>% # data_frame() %>%
group_by(names(rfm_segments)[3]) %>%
dplyr::select(segment, names(rfm_segments)[4])
View(data)
data <-
rfm_segments %>% # data_frame() %>%
group_by(names(rfm_segments)[3]) %>%
dplyr::select(segment, names(rfm_segments)[4]) %>%
summarize(median(names(rfm_segments)[4])) %>%
rename(segment = segment, avg_recency = `median(recency)`) %>%
arrange(avg_recency)
data <-
rfm_segments %>% # data_frame() %>%
group_by(names(rfm_segments)[3]) %>%
dplyr::select(names(rfm_segments)[3], names(rfm_segments)[4]) %>%
summarize(median(names(rfm_segments)[4])) %>%
rename(segment = segment, avg_recency = `median(recency)`) %>%
arrange(avg_recency)
data <-
rfm_segments %>% # data_frame() %>%
group_by(names(rfm_segments)[3]) %>%
dplyr::select(names(rfm_segments)[3], names(rfm_segments)[4])
data <-
rfm_segments %>% # data_frame() %>%
group_by(names(rfm_segments)[3]) %>%
dplyr::select(names(rfm_segments)[3], names(rfm_segments)[4]) %>%
summarize(median(names(rfm_segments)[4]))
data <-
rfm_segments %>% # data_frame() %>%
group_by(names(rfm_segments)[3]) %>%
dplyr::select(names(rfm_segments)[3], names(rfm_segments)[4]) %>%
summarize(median(names(rfm_segments)[4])) %>%
rename(names(rfm_segments)[3] = segment, avg_recency = `median(recency)`) %>%
arrange(avg_recency)
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment) %>%
select(segment, recency_days) %>%
summarize(median(recency_days))
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment) %>%
dplyr::select(segment, recency_days) %>%
summarize(median(recency_days))
View(data)
data <-
rfm_segments %>% # data_frame() %>%
group_by(names(rfm_segments)[3]) %>%
dplyr::select(names(rfm_segments)[3], names(rfm_segments)[4]) %>%
summarize(median(names(rfm_segments)[4]))
View(data)
data <-
rfm_segments %>% # data_frame() %>%
group_by(names(rfm_segments)[3]) %>%
dplyr::select(names(rfm_segments)[3], names(rfm_segments)[4])
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment) %>%
dplyr::select(segment, recency_days)
var1 = names(rfm_segments)[1]
var2 = names(rfm_segments)[2]
var3 = names(rfm_segments)[3]
var4 = names(rfm_segments)[4]
data <-
rfm_segments %>% # data_frame() %>%
group_by(var3) %>%
dplyr::select(var3, var4) %>%
summarize(median(var4))
View(rfm_segments)
data <-
rfm_segments %>% # data_frame() %>%
group_by(var3)
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment) %>%
dplyr::select(var3, var4)
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment) %>%
dplyr::select(var3, var4) %>%
summarize(median(var4))
runApp('C:/Users/31153/Dropbox/Anisha folder/course material/rfm_analysis_shinyapp')
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment) %>%
select(segment, recency_days) %>%
summarize(median(recency_days)) %>%
rename(segment = segment, avg_recency = `median(recency_days)`) %>%
arrange(avg_recency)
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment) %>%
dplyr::select(segment, recency_days) %>%
summarize(median(recency_days)) %>%
rename(segment = segment, avg_recency = `median(recency_days)`) %>%
arrange(avg_recency)
data <-
rfm_segments %>% # data_frame() %>%
group_by(segment) %>%
dplyr::select(segment, recency_days) %>%
summarize(median(recency_days)) %>%
rename(segment = segment, avg_recency = `median(recency_days)`) %>%
arrange(avg_recency)
n_fill <- nrow(data)
ggplot(data, aes(segment, avg_recency)) +
geom_bar(stat = "identity", fill = brewer.pal(n = n_fill, name = "Set1")) +
xlab("Segment") + ylab("Median Recency") +
ggtitle("Median Recency by Segment") +
coord_flip() +
theme(
plot.title = element_text(hjust = 0.5)
)
data <-
rfm_segments %>%
group_by(segment) %>%
select(segment, revenue) %>%
summarize(median(revenue)) %>%
rename(segment = segment, avg_monetary = `median(revenue)`) %>%
arrange(avg_monetary)
n_fill <- nrow(data)
ggplot(data, aes(segment, avg_monetary)) +
geom_bar(stat = "identity", fill = brewer.pal(n = n_fill, name = "Set1")) +
xlab("Segment") + ylab("Median Monetary Value") +
ggtitle("Median Monetary Value by Segment") +
coord_flip() +
theme(
plot.title = element_text(hjust = 0.5)
)
data <-
rfm_segments %>%
group_by(segment) %>%
dplyr::select(segment, revenue) %>%
summarize(median(revenue)) %>%
rename(segment = segment, avg_monetary = `median(revenue)`) %>%
arrange(avg_monetary)
n_fill <- nrow(data)
ggplot(data, aes(segment, avg_monetary)) +
geom_bar(stat = "identity", fill = brewer.pal(n = n_fill, name = "Set1")) +
xlab("Segment") + ylab("Median Monetary Value") +
ggtitle("Median Monetary Value by Segment") +
coord_flip() +
theme(
plot.title = element_text(hjust = 0.5)
)
runApp('C:/Users/31153/Dropbox/Anisha folder/course material/rfm_analysis_shinyapp')
runApp('C:/Users/31153/Dropbox/Anisha folder/course material/rfm_analysis_shinyapp')
library(RColorBrewer)
library(ggplot2)
library(dplyr)
### ---- RFM an for MKTR --- ###
if (!require("rfm")) {install.packages("rfm")}
library(rfm)
rfm_data_customer  # 40k rows dataframe
str(rfm_data_customer)
hist(rfm_data_customer$recency_days, breaks=100,
xlab="Days since last visit", ylab="Frequency in the dataset")
require(lubridate)   # date-time manipulation R package
analysis_date <- lubridate::as_date('2007-01-01', tz = 'UTC')
# test-driving some lubridate applications
date1 = rfm_data_customer$most_recent_visit
a1=date1[1]; a2=date1[2]; a1;a2
a2-a1  # time differences this easy to do!
sort(date1[1:20])   # sort() works peacefully.
## use rfm::rfm_table_customer() func
rfm_result <- rfm_table_customer(data=rfm_data_customer,
customer_id,
number_of_orders,
recency_days,
revenue,
analysis_date,
recency_bins = 4, frequency_bins = 4, monetary_bins = 4)    # 0.10 secs
rfm_result
rfm_score = rfm_result$rfm$rfm_score; rfm_score[1:10]
hist(rfm_score, breaks=20)  # pfft. Drop.
# output as csv the freq tbl of unique rfm_levels
freq = table(rfm_score) %>% as.numeric();  freq[1:9]
rfm_vals = unique(rfm_score) %>% sort();  rfm_vals[1:10]
freq_tbl = data.frame(rfm_vals, freq); freq_tbl
# Heat map output
rfm_heatmap(rfm_result)
# bar chart output
rfm_bar_chart(rfm_result)
# histogram output
rfm_histograms(rfm_result)
rfm_order_dist(rfm_result)
# recency vs freq scatterplot
rfm_rf_plot(rfm_result)
## Build segment descriptors - tentative
test_r = rfm_result$rfm$recency_score
test_f = rfm_result$rfm$frequency_score
test_m = rfm_result$rfm$monetary_score
min1 = min(test_r); max1 = max(test_r); lowmed1 = floor(max1/2)
min1; max1; lowmed1
rfm_segments = case_when(
rfm_score == paste0(max1, max1, max1) %>% as.numeric() ~ "best.customers",
rfm_score == paste0(min1, min1, max1) %>% as.numeric() ~ "lost",
rfm_score < paste0(min1, min1, lowmed1) %>% as.numeric() ~ "lost n cheap",
test_f == max1 ~ "loyals",
test_m == max1 ~ "big spenders"
)
# replace NA with 'Others'
a0 = (is.na(rfm_segments));   rfm_segments[a0] = "Others"
rfm_segments[1:40]
# Calc Segment size
rfm_segments = rfm_segments %>%
data_frame() %>% rename(segment = ".") %>% bind_cols(rfm_data_customer)
rfm_segments %>%
count(segment) %>%
arrange(desc(n)) %>%
rename(Segment = segment, Count = n)
View(rfm_segments)
runApp('C:/Users/31153/Dropbox/Anisha folder/course material/rfm_analysis_shinyapp')
runApp('C:/Users/31153/Dropbox/Anisha folder/course material/rfm_analysis_shinyapp')
data.frame(rfm_segments[,2],rfm_score,rfm_segments[,1],rfm_segments[,6],rfm_segments[,3])
runApp('C:/Users/31153/Dropbox/Anisha folder/course material/rfm_analysis_shinyapp')
runApp('C:/Users/31153/Dropbox/Anisha folder/course material/rfm_analysis_shinyapp')
rfm_segments %>%
count(segment) %>%
arrange(desc(n))
rfm_segments %>%
count(segment) %>%
arrange(desc(n)) %>%
rename(Segment = segment, Count = n)
segment_data <- data.frame(rfm_segments[,2],rfm_score,rfm_segments[,1],rfm_segments[,6],rfm_segments[,3])
runApp('C:/Users/31153/Dropbox/Anisha folder/course material/rfm_analysis_shinyapp')
rfm_segments[,2]
segment_data <- data.frame(rfm_segments[,2],rfm_score,rfm_segments[,1],rfm_segments[,6],rfm_segments[,3])
runApp('C:/Users/31153/Dropbox/Anisha folder/course material/rfm_analysis_shinyapp')
type(rfm_segments)
typeof(rfm_segments)
View(rfm_segments)
runApp('C:/Users/31153/Dropbox/Anisha folder/course material/rfm_analysis_shinyapp')
data = read.csv("Exmaple1.csv")
getcwd()
getwd()
data = read.csv("Example1.csv")
rfm_result <- rfm_table_customer(data = data,
names(data)[1],
names(data)[3],
names(data)[2],
names(data)[4],
analysis_date,
recency_bins = input$bins, frequency_bins = input$bins, monetary_bins = input$bins)    # 0.10 secs
rfm_order_dist(rfm_result)
rfm_score = rfm_result$rfm$rfm_score; rfm_score[1:10]
## Build segment descriptors - tentative
test_r = rfm_result$rfm$recency_score
test_f = rfm_result$rfm$frequency_score
test_m = rfm_result$rfm$monetary_score
min1 = min(test_r); max1 = max(test_r); lowmed1 = floor(max1/2)
min1; max1; lowmed1
rfm_segments = case_when(
rfm_score == paste0(max1, max1, max1) %>% as.numeric() ~ "best.customers",
rfm_score == paste0(min1, min1, max1) %>% as.numeric() ~ "lost",
rfm_score < paste0(min1, min1, lowmed1) %>% as.numeric() ~ "lost n cheap",
test_f == max1 ~ "loyals",
test_m == max1 ~ "big spenders"
)
# replace NA with 'Others'
a0 = (is.na(rfm_segments));   rfm_segments[a0] = "Others"
rfm_segments[1:40]
# Calc Segment size
rfm_segments = rfm_segments %>%
data_frame() %>% rename(segment = ".") %>% bind_cols(data)
rfm_segments %>%
count(segment) %>%
arrange(desc(n)) %>%
rename(Segment = segment, Count = n)
rfm_score = rfm_result$rfm$rfm_score; rfm_score[1:10]
## Build segment descriptors - tentative
test_r = rfm_result$rfm$recency_score
test_f = rfm_result$rfm$frequency_score
test_m = rfm_result$rfm$monetary_score
min1 = min(test_r); max1 = max(test_r); lowmed1 = floor(max1/2)
min1; max1; lowmed1
rfm_segments = case_when(
rfm_score == paste0(max1, max1, max1) %>% as.numeric() ~ "best.customers",
rfm_score == paste0(min1, min1, max1) %>% as.numeric() ~ "lost",
rfm_score < paste0(min1, min1, lowmed1) %>% as.numeric() ~ "lost n cheap",
test_f == max1 ~ "loyals",
test_m == max1 ~ "big spenders"
)
# replace NA with 'Others'
a0 = (is.na(rfm_segments));   rfm_segments[a0] = "Others"
rfm_segments[1:40]
rfm_segments = rfm_segments %>%
data_frame() %>% rename(segment = ".") %>% bind_cols(data)
rfm_segments = case_when(
rfm_score == paste0(max1, max1, max1) %>% as.numeric() ~ "best.customers",
rfm_score == paste0(min1, min1, max1) %>% as.numeric() ~ "lost",
rfm_score < paste0(min1, min1, lowmed1) %>% as.numeric() ~ "lost n cheap",
test_f == max1 ~ "loyals",
test_m == max1 ~ "big spenders"
)
View(rfm_result)
rfm_score = rfm_result$rfm$rfm_score; rfm_score[1:10]
rfm_result <- rfm_table_customer(data = data,
names(data)[1],
names(data)[3],
names(data)[2],
names(data)[4],
analysis_date,
recency_bins = input$bins, frequency_bins = input$bins, monetary_bins = input$bins)    # 0.10 secs
rfm_order_dist(rfm_result)
input = 4
input$bins =4
input$bins <- 4
rfm_result <- rfm_table_customer(data = data,
names(data)[1],
names(data)[3],
names(data)[2],
names(data)[4],
analysis_date,
recency_bins = input$bins, frequency_bins = input$bins, monetary_bins = input$bins)    # 0.10 secs
rfm_order_dist(rfm_result)
rfm_score = rfm_result$rfm$rfm_score; rfm_score[1:10]
## Build segment descriptors - tentative
test_r = rfm_result$rfm$recency_score
test_f = rfm_result$rfm$frequency_score
test_m = rfm_result$rfm$monetary_score
min1 = min(test_r); max1 = max(test_r); lowmed1 = floor(max1/2)
min1; max1; lowmed1
rfm_segments = case_when(
rfm_score == paste0(max1, max1, max1) %>% as.numeric() ~ "best.customers",
rfm_score == paste0(min1, min1, max1) %>% as.numeric() ~ "lost",
rfm_score < paste0(min1, min1, lowmed1) %>% as.numeric() ~ "lost n cheap",
test_f == max1 ~ "loyals",
test_m == max1 ~ "big spenders"
)
# replace NA with 'Others'
a0 = (is.na(rfm_segments));   rfm_segments[a0] = "Others"
rfm_segments[1:40]
rfm_segments = rfm_segments %>%
data_frame() %>% rename(segment = ".") %>% bind_cols(data)
rfm_segments %>%
count(segment) %>%
arrange(desc(n)) %>%
rename(Segment = segment, Count = n)
segment_data <- data.frame(rfm_segments[,2],rfm_score,rfm_segments[,1],rfm_segments[,6],rfm_segments[,3])
View(rfm_segments)
runApp('C:/Users/31153/Dropbox/Anisha folder/course material/rfm_analysis_shinyapp')
runApp('C:/Users/31153/Dropbox/Anisha folder/course material/rfm_analysis_shinyapp')
runGitHub("rfm_analysis_shinyapp","gittian")
## Resolve dependecies
if (!require(shiny)){install.packages("shiny")}
if (!require(RColorBrewer)){install.packages("RColorBrewer")}
if (!require(ggplot2)){install.packages("ggplot2")}
if (!require(dplyr)){install.packages("dplyr")}
if (!require(rfm)) {install.packages("rfm")}
if (!require(lubridate)) {install.packages("lubridate")}
library(lubridate)
library(rfm)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
runGitHub("rfm_analysis_shinyapp","gittian")
runApp('C:/Users/31153/Dropbox/Anisha folder/course material/rfm_analysis_shinyapp')
## Resolve dependecies
if (!require(shiny)){install.packages("shiny")}
if (!require(RColorBrewer)){install.packages("RColorBrewer")}
if (!require(ggplot2)){install.packages("ggplot2")}
if (!require(dplyr)){install.packages("dplyr")}
if (!require(rfm)) {install.packages("rfm")}
if (!require(lubridate)) {install.packages("lubridate")}
library(lubridate)
library(rfm)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
runGitHub("rfm_analysis_shinyapp","gittian")
runGitHub("rfm_analysis_shinyapp","gittian")
runGitHub("rfm_analysis_shinyapp","gittian")
## Resolve dependecies
if (!require(shiny)){install.packages("shiny")}
if (!require(RColorBrewer)){install.packages("RColorBrewer")}
if (!require(ggplot2)){install.packages("ggplot2")}
if (!require(dplyr)){install.packages("dplyr")}
if (!require(rfm)) {install.packages("rfm")}
if (!require(lubridate)) {install.packages("lubridate")}
library(lubridate)
library(rfm)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
runGitHub("rfm_analysis_shinyapp","gittian")
runGitHub("rfm_analysis_shinyapp","gittian")
runApp()
runApp()
## Resolve dependecies
if (!require(shiny)){install.packages("shiny")}
if (!require(RColorBrewer)){install.packages("RColorBrewer")}
if (!require(ggplot2)){install.packages("ggplot2")}
if (!require(dplyr)){install.packages("dplyr")}
if (!require(rfm)) {install.packages("rfm")}
if (!require(lubridate)) {install.packages("lubridate")}
library(lubridate)
library(rfm)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
runGitHub("rfm_analysis_shinyapp","gittian")
## Resolve dependecies
if (!require(shiny)){install.packages("shiny")}
if (!require(RColorBrewer)){install.packages("RColorBrewer")}
if (!require(ggplot2)){install.packages("ggplot2")}
if (!require(dplyr)){install.packages("dplyr")}
if (!require(rfm)) {install.packages("rfm")}
if (!require(lubridate)) {install.packages("lubridate")}
library(lubridate)
library(rfm)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
runGitHub("rfm_analysis_shinyapp","gittian")
